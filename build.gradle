plugins {
	id 'org.springframework.boot' version '3.0.0-M3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "checkstyle"
}

repositories {
	mavenLocal()
	maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
	maven { url "https://maven.aliyun.com/repository/spring/" }
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}
checkstyle {
	toolVersion = "8.39"
	showViolations = false
	ignoreFailures = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.mockito:mockito-core"
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 设置编译前代码检查，复制pre-commit脚本到.git的hooks目录
task updateGitHooks(type: Copy) {
	from new File(rootProject.rootDir, "config/git/hooks/pre-commit")
	into {
		new File(rootProject.rootDir, ".git/hooks")
	}
	fileMode 0755
}
build.dependsOn updateGitHooks
gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
	}
}
